import 'package:branch_managers_app/services/auth_wrapper.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:firebase_core/firebase_core.dart'; // Import for Firebase initialization
import 'firebase_options.dart'; // IMPORTANT: This file is generated by FlutterFire CLI
import 'core/app_theme.dart';
import 'viewmodels/dashboard_viewmodel.dart';
import 'viewmodels/employee_viewmodel.dart';
import 'viewmodels/quotes_invoices_viewmodel.dart';

// The main function is now asynchronous to allow for Firebase initialization
void main() async {
  // Ensure Flutter widgets are initialized before Firebase
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase App
  // You MUST run 'flutterfire configure' in your project's root directory
  // to generate the 'firebase_options.dart' file and then uncomment the line below.
  try {
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
  } catch (e) {
    // Handle Firebase initialization errors, e.g., show a message or log
    print("Error initializing Firebase: $e");
    // You might want to show an error screen or dialog to the user here
  }

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => DashboardViewModel()),
        ChangeNotifierProvider(create: (_) => EmployeeViewModel()),
        ChangeNotifierProvider(create: (_) => QuotesInvoicesViewModel()),
      ],
      child: MaterialApp(
        title: 'Branch Managers App',
        theme: AppTheme.theme,
        home: const AuthWrapper(), // Set AuthWrapper as the home widget
        debugShowCheckedModeBanner: false,
      ),
    );
  }
}
